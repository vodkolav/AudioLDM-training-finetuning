augmentation:
  mixup: 0.0
data:
  class_label_indices: "audioset_eval_subset"
  dataloader_add_ons: []
  test: "audiocaps"
  train: ["audiocaps"]
  val: "audiocaps"
log_directory: "./log/latent_diffusion"
metadata_root: "./data/dataset/metadata/dataset_root.json"
model:
  params:
    # Other parameters
    base_learning_rate: 1.0e-4
    batchsize: 2
    channels: *latent_embed_dim # TODO might need to change
    cond_stage_config:
      film_clap_cond1:
        cond_stage_key: text
        conditioning_key: film
        params:
          amodel: HTSAT-tiny
          embed_mode: text # or text
          pretrained_path: data/checkpoints/clap_htsat_tiny.pt
          sampling_rate: 16000
        target: audioldm_train.conditional_models.CLAPAudioEmbeddingClassifierFreev2
    evaluation_params:
      ddim_sampling_steps: 200
      n_candidates_per_samples: 3
      unconditional_guidance_scale: 3.5
    # Autoencoder
    first_stage_config:
      base_learning_rate: 8.0e-06
      params:
        batchsize: 4
        ddconfig:
          attn_resolutions: []
          ch: 128
          ch_mult:
            - 1
            - 2
            - 4
          double_z: true
          downsample_time: false
          dropout: 0.0
          in_channels: 1
          mel_bins: *mel_bins # The frequency bins of mel spectrogram
          num_res_blocks: 2
          out_ch: 1
          resolution: 256
          z_channels: 8
        embed_dim: *latent_embed_dim
        image_key: fbank
        lossconfig:
          params:
            disc_in_channels: 1
            disc_start: 50001
            disc_weight: 0.5
            kl_weight: 1000.0
          target: audioldm_train.losses.LPIPSWithDiscriminator
        monitor: val/rec_loss
        reload_from_ckpt: "data/checkpoints/vae_mel_16k_64bins.ckpt"
        sampling_rate: *sampling_rate
        subband: 1
        time_shuffle: 1
      target: audioldm_train.modules.latent_encoder.autoencoder.AutoencoderKL
    first_stage_key: fbank
    latent_f_size: *latent_f_size
    latent_t_size: *latent_t_size # TODO might need to change
    linear_end: 0.0195
    linear_start: 0.0015
    log_every_t: 200
    monitor: val/loss_simple_ema
    num_timesteps_cond: 1
    optimize_ddpm_parameter: *optimize_ddpm_parameter
    parameterization: eps # [eps, x0, v]
    sampling_rate: *sampling_rate
    scale_by_std: true
    timesteps: 1000
    unconditional_prob_cfg: 0.1
    unet_config:
      params:
        attention_resolutions:
          - 8
          - 4
          - 2
        channel_mult:
          - 1
          - 2
          - 3
          - 5
        extra_film_condition_dim: 512 # If you use film as extra condition, set this parameter. For example if you have two conditioning vectors each have dimension 512, then this number would be 1024
        extra_sa_layer: false
        image_size: 64
        # context_dim: 
        # - 768
        in_channels: *unet_in_channels # The input channel of the UNet model
        model_channels: 128 # TODO might need to change
        num_head_channels: 32
        num_res_blocks: 2
        out_channels: *latent_embed_dim # TODO might need to change
        transformer_depth: 1
        use_spatial_transformer: true
      target: audioldm_train.modules.diffusionmodules.openaimodel.UNetModel
    warmup_steps: *warmup_steps
  target: audioldm_train.modules.latent_diffusion.ddpm.LatentDiffusion
precision: "high"
preprocessing:
  audio:
    duration: 10.24
    max_wav_value: 32768.0
    sampling_rate: *sampling_rate
  mel:
    mel_fmax: 8000
    mel_fmin: 0
    n_mel_channels: *mel_bins
  stft:
    filter_length: 1024
    hop_length: 160
    win_length: 1024
project: "audioldm"
step:
  # limit_val_batches: 2
  max_steps: 800000
  save_checkpoint_every_n_steps: 5000
  save_top_k: 1
  validation_every_n_epochs: 5
variables:
  in_channels: &unet_in_channels 8
  latent_embed_dim: &latent_embed_dim 8
  latent_f_size: &latent_f_size 16
  latent_t_size: &latent_t_size 256 # TODO might need to change
  mel_bins: &mel_bins 64
  optimize_ddpm_parameter: &optimize_ddpm_parameter true
  optimize_gpt: &optimize_gpt true
  sampling_rate: &sampling_rate 16000
  warmup_steps: &warmup_steps 2000
